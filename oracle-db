#!/bin/bash
# chkconfig: 345 20 80
# description: starts the jetty server

# Source function library.
. /etc/init.d/functions


LISTNER=lsnrctl
SQLPLUS="sqlplus / as sysdba"
SUCCESS_STRING="status READY"
SERVICE_NAME=oracle-db
USERNAME=oracle

# -------- Core functions --------

# Start the process
function start_service {
  echo "Starting $SERVICE_NAME ..."

  # Start listner
  su - $USERNAME -c "$LISTNER start"
  if [ $? -eq 0 ]
    then
    # Start DB
    su - $USERNAME -c "echo startup | $SQLPLUS"
    if [ $? -eq 0 ]
      then
      echo "Successfully started $SERVICE_NAME"
      return 0
    else
      echo "Failed to start $SERVICE_NAME !"
      return 1
    fi
  else
    echo "Failed to start $SERVICE_NAME !"
    return 1
  fi
}


# Stop the process
function stop_service {
  echo "Stopping $SERVICE_NAME ..."


  # Stop DB
  su - $USERNAME -c "echo shutdown normal | $SQLPLUS"
  if [ $? -eq 0 ]
    then
    # Stop listner
    su - $USERNAME -c "$LISTNER stop"
    if [ $? -eq 0 ]
      then
      echo "Successfully stoped $SERVICE_NAME"
      return 0
    else
      echo "Failed to Stop $SERVICE_NAME !"
      return 1
    fi
  else
    echo "Failed to stop $SERVICE_NAME !"
    return 1
  fi
}

# Check status
function check_status {
  # Check for PID_FILE
  PCOUNT=`su - $USERNAME -c "$LISTNER status | grep  'status READY' | wc -l"`

  if [ $PCOUNT -gt 0 ]
    then
    echo "$SERVICE_NAME is running"
    return 0
  else
    echo "$SERVICE_NAME is NOT running"
    return 1 
  fi
}

# -------------------------------------

case "$1" in
  start)
    check_status
    if [ $? -eq 1 ]
      then
      start_service
    fi
    ;;

  stop)
    check_status
    if [ $? -eq 0 ]
      then
      stop_service
    fi
    ;;

  restart)
    check_status
    if [ $? -eq 0 ]
      then
      stop_service
    fi
    start_service
    ;;

  status)
    check_status
    ;;

  *)
    echo "Usage: service $SERVICE_NAME {start|stop|restart|status}" >&2
    exit 1
    ;;
esac

exit 0